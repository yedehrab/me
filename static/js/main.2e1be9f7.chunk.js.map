{"version":3,"sources":["assets/images/furkan-ozbek.jpeg","serviceWorker.js","Components/Header/Header.js","Components/Links/Link/Link.js","Components/Links/SocialLinks.js","Components/Links/Links.js","data/Activities/ActivitiesILike.js","Components/Footer/Activities/Activity/Activity.js","Components/Footer/Activities/Activities.js","Components/Footer/WhoAmI/ShortMe.js","Components/Footer/WhoAmI/LongMe.js","Components/Footer/Buttons/Buttons.js","Components/Footer/Footer.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Header","className","src","Furkan","alt","Link","props","href","target","rel","children","socialLinks","Links","githubUrl","twitterUrl","linkedinUrl","codepenUrl","mailUrl","activitiesILike","id","activityDesc","Activity","role","aria-label","Activities","renderedActivities","map","activity","ShortMe","LongMe","Buttons","onClick","shortMeClickHandler","longMeClickHandler","Footer","useState","clickedButton","setClickedButton","renderedContent","e","whatILikeClickHandler","App","Component","ReactDOM","render","document","querySelector","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2e1be9f7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/furkan-ozbek.b9e6488e.jpeg\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === \"localhost\" ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === \"[::1]\" ||\r\n        // 127.0.0.1/8 is considered localhost for IPv4.\r\n        window.location.hostname.match(\r\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n        )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener(\"load\", () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        \"This web app is being served cache-first by a service \" +\r\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === \"installed\") {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                \"New content is available and will be used when all \" +\r\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log(\"Content is cached for offline use.\");\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error during service worker registration:\", error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get(\"content-type\");\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null &&\r\n                    contentType.indexOf(\"javascript\") === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                \"No internet connection found. App is running in offline mode.\"\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if (\"serviceWorker\" in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nimport Furkan from \"../../assets/images/furkan-ozbek.jpeg\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header__img\">\r\n                <img src={Furkan} alt=\"Furkan\" />\r\n            </div>\r\n\r\n            <div className=\"header__desc\">\r\n                <h1>Abdullah Furkan Özbek</h1>\r\n                <h3>Front End Developer</h3>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Link = props => {\r\n    return (\r\n        <a\r\n            className=\"social-links__link\"\r\n            href={props.href}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n        >\r\n            {props.children}\r\n        </a>\r\n    );\r\n};\r\n\r\nexport default Link;\r\n","export const socialLinks = {\r\n    twitterUrl: \"https://twitter.com/afozbek_\",\r\n    githubUrl: \"https://github.com/afozbek\",\r\n    codepenUrl: \"https://codepen.io/afozbek\",\r\n    linkedinUrl: \"https://linkedin.com/in/afozbek\",\r\n    mailUrl: \"mailto:furkanozbek1995@gmail.com\"\r\n};\r\n","import React from \"react\";\r\nimport Link from \"./Link/Link\";\r\n\r\nimport \"./Links.css\";\r\nimport { socialLinks } from \"./SocialLinks\";\r\n\r\nconst Links = () => {\r\n    const {\r\n        githubUrl,\r\n        twitterUrl,\r\n        linkedinUrl,\r\n        codepenUrl,\r\n        mailUrl\r\n    } = socialLinks;\r\n    return (\r\n        <div className=\"social-links\">\r\n            <Link href={twitterUrl}>Twitter</Link>\r\n            <Link href={githubUrl}>Github</Link>\r\n            <Link href={linkedinUrl}>Linkedin</Link>\r\n            <Link href={codepenUrl}>Codepen</Link>\r\n            <Link href={mailUrl}>Email</Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Links;\r\n","export const activitiesILike = [\r\n    { id: 1, activityDesc: \"Problem çözmek\" },\r\n    { id: 2, activityDesc: \"Bildiklerimi başkasına anlatmak\" },\r\n    { id: 3, activityDesc: \"Yeni projeler üretmek\" },\r\n    { id: 4, activityDesc: \"Yeni insanlarla tanışmak\" },\r\n    { id: 5, activityDesc: \"Planlı ve programlı çalışmak\" },\r\n    {\r\n        id: 6,\r\n        activityDesc:\r\n            \"Çevremdeki insanların problemlerini dinleyip çözüm önerisi sunmak\"\r\n    },\r\n    { id: 7, activityDesc: \"Arkadaşlarımla dolaşmak ve sohbet etmek\" },\r\n    { id: 8, activityDesc: \"Film izlemek\" }\r\n];\r\n","import React from \"react\";\r\n\r\nconst Activity = props => {\r\n    return (\r\n        <li>\r\n            <span role=\"img\" aria-label=\"option\" />\r\n            {props.activityDesc}\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default Activity;\r\n","import React from \"react\";\r\n\r\nimport { activitiesILike } from \"../../../data/Activities/ActivitiesILike\";\r\nimport Activity from \"./Activity/Activity\";\r\nimport \"./Activities.css\";\r\n\r\nconst Activities = () => {\r\n    let renderedActivities = activitiesILike.map(activity => (\r\n        <Activity activityDesc={activity.activityDesc} />\r\n    ));\r\n    return (\r\n        <div className=\"footer__whatILike\">\r\n            <h4>Yapmaktan Hoşlandığım Aktiviteler</h4>\r\n            <ul className=\"activities\">{renderedActivities}</ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Activities;\r\n","import React from \"react\";\r\n\r\nconst ShortMe = () => {\r\n    return (\r\n        <div className=\"footer__whoAmI\">\r\n            <p>\r\n                Hi! I am Furkan\r\n                <span role=\"img\" aria-label=\"hi\">\r\n                    {\" \"}\r\n                    ✋🏻\r\n                </span>\r\n            </p>\r\n            <p>\r\n                I am a front end developer who likes to solve my problems with\r\n                code. My overall goal is to build performance systems and to\r\n                develop stable applications.\r\n            </p>\r\n            <p>\r\n                I am interested in web technologies and develop projects in this\r\n                field. I am especially familiar with\r\n                <strong> Reactjs, Reduxjs and Nodejs.</strong>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ShortMe;\r\n","import React from \"react\";\r\nimport Link from \"../../Links/Link/Link\";\r\n\r\nimport { socialLinks } from \"../../Links/SocialLinks\";\r\n\r\nconst LongMe = () => {\r\n    return (\r\n        <div className=\"footer__whoAmI\">\r\n            <p>\r\n                Hello! My name is Furkan\r\n                <span role=\"img\" aria-label=\"hi\">\r\n                    {\" \"}\r\n                    👨🏻‍💻\r\n                </span>\r\n            </p>\r\n            <p>\r\n                I am a 4th year student at Istanbul University Computer\r\n                Engineering Department. Previously, I worked at Vakıf Emeklilik,\r\n                Rella Media, Zero Second and OBSS.\r\n            </p>\r\n            <p>\r\n                I am also supporting <strong>freeCodeCamp</strong> community\r\n                which place that I learn and improve my skills. Among my future\r\n                plans, I would like to create a community, just like\r\n                freeCodeCamp, and bring people together under one idea. I\r\n                believe that if developers will gladly help each other we can\r\n                improve the dev community much better.\r\n                <span role=\"img\" aria-label=\"together\">\r\n                    💪🏻\r\n                </span>\r\n            </p>\r\n            <p>\r\n                I love reading articles, learning new technologies, building\r\n                projects and be the part of the <strong>tech community</strong>{\" \"}\r\n                very much!\r\n            </p>\r\n            <p>\r\n                Feel free to <Link href={socialLinks.mailUrl}>contact</Link> me\r\n                if you have any other questions.\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LongMe;\r\n","import React from \"react\";\r\n\r\nconst Buttons = props => {\r\n    return (\r\n        <div className=\"footer__buttons\">\r\n            <button\r\n                className=\"sm-margin-right\"\r\n                onClick={() => props.shortMeClickHandler()}\r\n            >\r\n                Short Me\r\n            </button>\r\n            <button\r\n                className=\"sm-margin-right\"\r\n                onClick={() => props.longMeClickHandler()}\r\n            >\r\n                Long Me\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Buttons;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./Footer.css\";\r\nimport Activities from \"./Activities/Activities\";\r\nimport ShortMe from \"./WhoAmI/ShortMe\";\r\nimport LongMe from \"./WhoAmI/LongMe\";\r\nimport Buttons from \"./Buttons/Buttons\";\r\n\r\nconst Footer = () => {\r\n    const [shortMe, longMe, whatILike] = [\"shortMe\", \"longMe\", \"whatILike\"];\r\n    const [clickedButton, setClickedButton] = useState(shortMe);\r\n\r\n    const shortMeClickHandler = e => {\r\n        setClickedButton(shortMe);\r\n    };\r\n\r\n    const longMeClickHandler = e => {\r\n        setClickedButton(longMe);\r\n    };\r\n\r\n    const whatILikeClickHandler = e => {\r\n        setClickedButton(whatILike);\r\n    };\r\n\r\n    let renderedContent = <ShortMe />;\r\n\r\n    if (clickedButton === longMe) {\r\n        renderedContent = <LongMe />;\r\n    } else if (clickedButton === whatILike) {\r\n        renderedContent = <Activities />;\r\n    }\r\n\r\n    return (\r\n        <div className=\"footer\">\r\n            <Buttons\r\n                shortMeClickHandler={shortMeClickHandler}\r\n                longMeClickHandler={longMeClickHandler}\r\n                whatILikeClickHandler={whatILikeClickHandler}\r\n            />\r\n            {renderedContent}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Header from \"./Components/Header/Header\";\r\nimport Links from \"./Components/Links/Links\";\r\nimport Footer from \"./Components/Footer/Footer\";\r\n\r\nimport \"./App.css\";\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Header />\r\n                <Links />\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}